<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1457109950773">{:repl-history {:ide [], :local [&quot;(encrypt-passwords-in-file \&quot;test.txt\&quot; \&quot;test\&quot;)&quot; &quot;line&quot; &quot;(def line (slurp \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot;))&quot; &quot;(re-seq #\&quot;\\(ENCRYPT-THIS\\s+\\\&quot;?[\\w+\\s*]+\\\&quot;?\\s*\\)\&quot; line)&quot; &quot;(def lines (line-seq (slurp \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot;)))&quot; &quot;(def lines (line-seq (clojure.java.io/reader \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot;)))&quot; &quot;(count lines)&quot; &quot;(nth lines 5)&quot; &quot;(nth lines 4)&quot; &quot;(s/replace (nth lines 4) #\&quot;(ENCRYPT-THIS\\s+\\w+\\)\&quot; \&quot;abcd\&quot;)&quot; &quot;(s/replace (nth lines 4) #\&quot;\\(ENCRYPT-THIS\\s+\\w+\\)\&quot; \&quot;abcd\&quot;)&quot; &quot;(s/replace (nth lines 4) #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;abcd\&quot;)&quot; &quot;(s/replace (nth lines 4) #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS    \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot; )\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot; )\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;   )\&quot; #\&quot;\\(ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(s/replace \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\\&quot;\\S+\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\S+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\S+s+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\S+s+S+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\S+s+S+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\w*)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(W*)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\W*)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\w+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(\\S+)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;.*\\\\\\\&quot;(.*)\\\\\\\&quot;.*\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(.*)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\\&quot;(.*)\\\&quot;\&quot; (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\S+\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev pass\\\&quot;)\&quot;))&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev pass\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass aaa bbb\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot; :group-password  (ENCRYPT-THISS \\\&quot;dev-pass aaa bbb\\\&quot;)\&quot;)&quot; &quot;(s/replace \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot;abcd\&quot;)&quot; &quot;(s/replace \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;lines&quot; &quot;(str lines)&quot; &quot;(apply str lines)&quot; &quot;(s/replace  #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; \&quot;\\\&quot;abcd\\\&quot;\&quot;)&quot; &quot;(str \&quot; :group-password  ( ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot; \\newline) &quot; &quot;(def file-name \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot;)&quot; &quot;(line-seq (clojure.java.io/reader file-name))&quot; &quot;(def lines (line-seq (clojure.java.io/reader file-name)))&quot; &quot;(def in-content (line-seq (clojure.java.io/reader file-name)))&quot; &quot;(def passwd \&quot;Secret13\&quot;)&quot; &quot;(def line \&quot; :group-password  (ENCRYPT-THIS \\\&quot;dev-pass\\\&quot;)\&quot;)&quot; &quot;(re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; line)&quot; &quot;(nth (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; line) 1)&quot; &quot;(defn passw (nth (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; line) 1))&quot; &quot;(def passw (nth (re-find #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; line) 1))&quot; &quot;(def encryption-password passwd)&quot; &quot;passwd&quot; &quot;(pr-str (c/encrypt-text passw encryption-password))&quot; &quot;(def encrypted-password (pr-str (c/encrypt-text passw encryption-password)))&quot; &quot;(s/replace line #\&quot;\\(\\s*ENCRYPT-THIS\\s+\\\&quot;(.*)\\\&quot;\\s*\\)\&quot; encrypted-password)&quot; &quot;(mapv (fn [x]\n                            (str (encrypt-password-in-line x passwd) \\newline)) in-content)&quot; &quot;(for [s in-content]\n                      (encrypt-password-in-line s passwd))&quot; &quot;(mapv (fn [x] (encrypt-password-in-line x passwd)) in-content)&quot; &quot;(for [s in-content]\n                      (do (println s)\n                          (encrypt-password-in-line s passwd)))&quot; &quot;(encrypt-passwords-in-file \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot; \&quot;Secret13\&quot;)&quot; &quot;(slurp \&quot;/Users/mike/IdeaProjects/arina-wcm/conf/cache.edn\&quot;)&quot; &quot;:(PROTECTED-DATA \&quot;Ua5T4UPIntu9GFvquVduDe4VV/Yg18dOG1n7sp5U5kw=\&quot;)&quot; &quot;(run-tests)&quot;], :remote []}}</component>
</project>